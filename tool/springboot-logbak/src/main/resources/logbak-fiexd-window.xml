<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="false">
	<!-- 文件大小 -->
	<property name="CODING" value="UTF-8" />


	<!--定义日志文件的存储地址，相对路径，相对于项目目录下. -->
	<property name="LOG_PATH" value="home/logs/customer" />
	<!-- 日志文件路径+日期 -->
	<property name="LOG_DIR" value="${LOG_PATH}/customer_%d{yyyy-MM-dd}" />
	<property name="LOG_FORMAT" value="%d{yyyy年MM月dd日 HH小时mm分钟ss秒} [%15t] [%5p] %70c | %m%n " />

	<!-- 控制台输出 -->
	<appender name="consoleAppender" class="ch.qos.logback.core.ConsoleAppender">
		<encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
			<pattern>${LOG_FORMAT}</pattern>
			<charset>${CODING}</charset>
		</encoder>
	</appender>

	<!-- 这个appender生成的日志文件满足5MB时会新建日志文件继续生成，只生成3个，当超过3个时将覆盖最早的日志 -->
	<appender name="fixedFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>log/fixedFile.log</file>
		<!-- 根据固定窗口模式生成日志文件，结合triggeringPolicy（当日志文件达到5MB时触发滚动，生成新的日志文件） -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<!-- 当生成了3个归档文件后，若继续生成，将覆盖最早的日志 -->
			<fileNamePattern>log/fixedFile%i.log.zip</fileNamePattern>
			<minIndex>1</minIndex>
			<!-- 文件数量最大值，超过则从1开始进行覆盖 -->
			<maxIndex>12</maxIndex>
		</rollingPolicy>
		<!-- 触发策略，超过10kb则进行滚动 -->
		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<maxFileSize>10kb</maxFileSize>
		</triggeringPolicy>
		<encoder>
			<pattern>${LOG_FORMAT}</pattern>
			<charset>UTF-8</charset>
		</encoder>
	</appender>



	<!-- 级别依次为【从高到低】： ERROR > WARN > INFO > DEBUG > TRACE -->
	<!--
		level="输出级别" 配置输出的级别，
		如果<appender>也配置了级别，那么就按照谁的级别高就输出谁的，
		比如：appender配了ERROR 那么root配INFO，那么会按照 appender的输出级别
		比如：root配了ERROR，appender配了INFO，那么会按照 root的输出级别
	-->
	<root level="INFO">
		<appender-ref ref="fixedFile" />
		<appender-ref ref="consoleAppender" />
	</root>
</configuration>